name: Make release

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64, Win32, ARM64]
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Add latest Windows SDK tools to PATH
      shell: pwsh
      run: |
        # List only directories that match a version pattern (e.g., 10.0.22000.0)
        $versionDirs = Get-ChildItem 'C:\Program Files (x86)\Windows Kits\10\bin' -Directory |
            Where-Object { $_.Name -match '^\d+\.\d+\.\d+\.\d+$' }
        
        # Sort by version (as strings, highest last)
        $latestVersionDir = $versionDirs | Sort-Object Name | Select-Object -Last 1
        
        if ($null -eq $latestVersionDir) {
            Write-Error "No Windows 10 SDK version directories found!"
            exit 1
        }
        
        $SDKTools = Join-Path $latestVersionDir.FullName 'x64'
        
        Write-Output "SDK tools in $SDKTools"
        echo "$SDKTools" | Out-File -FilePath $env:GITHUB_PATH -Append

    - name: Configure (CMake, Visual Studio generator)
      run: cmake -S . -B build -A ${{ matrix.arch }}

    - name: Build (MSBuild)
      run: cmake --build build --config Release

    - name: Normalize architecture
      id: arch_map
      shell: pwsh
      run: |
        if ("${{ matrix.arch }}" -eq "Win32") {
          $normarch = "x86"
        } elseif ("${{ matrix.arch }}" -eq "ARM64") {
          $normarch = "arm64"
        } else {
          $normarch = "${{ matrix.arch }}"
        }
        echo "normarch=$normarch" >> $env:GITHUB_OUTPUT
    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ steps.arch_map.outputs.normarch }}
        path: |
          build/bin/**/diff-ext-setup.exe
          build/bin/**/diff-ext-classic.dll
          build/msix/*.msix
          
  package:
    runs-on: windows-latest
    needs: build
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: all-builds

    - name: List downloaded artifacts
      shell: pwsh
      run: |
        Get-ChildItem -Recurse all-builds
    
    - name: Organize artifacts for installer
      shell: pwsh
      run: |
        Get-ChildItem -Recurse .
        $ErrorActionPreference = "Stop"
        $archs = @('x64', 'x86', 'arm64')
        foreach ($arch in $archs) {
          New-Item -Force -ItemType Directory -Path "installer\$arch" | Out-Null
          $src = "all-builds\build-$arch\bin\Release"
          if (Test-Path $src) {
            Copy-Item "$src\*" "installer\$arch\" -Force
          } else {
            Write-Error "Missing build for $arch!"
          }
        }
        Get-ChildItem -Recurse installer
      
    - name: Build Inno Setup installer
      uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
      with:
        path: installer\diff-ext.iss

    - name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        name: Installer
        path: installer/diff-ext-installer.exe

  release:
    runs-on: windows-latest
    needs: package
    steps:
    # - name: Create GitHub Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ github.ref_name }}
    #     release_name: ${{ github.ref_name }}
    #     draft: false
    #     prerelease: false

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: release

    - name: List downloaded artifacts
      shell: pwsh
      run: |
        Get-ChildItem -Recurse release

    # - name: Upload Release Asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: release/Installer/diff-ext-installer.exe
    #     asset_name: diff-ext-installer.exe
    #     asset_content_type: application/octet-stream        