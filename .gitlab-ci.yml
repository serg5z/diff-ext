stages:
  - build
  - package
  - upload
  - release

# 1. BUILD FOR EACH ARCH
build:
  stage: build

  tags:
    - saas-windows-medium-amd64

  parallel:
    matrix:
      - ARCH: x64
      - ARCH: Win32

  script:
    # Find latest Windows SDK tools (optional: adjust if needed)
    - |
      $versionDirs = Get-ChildItem 'C:\Program Files (x86)\Windows Kits\10\bin' -Directory |
        Where-Object { $_.Name -match '^\d+\.\d+\.\d+\.\d+$' }
      $latestVersionDir = $versionDirs | Sort-Object Name | Select-Object -Last 1
      if ($null -eq $latestVersionDir) {
        Write-Error "No Windows 10 SDK version directories found!"
        exit 1
      }
      $SDKTools = Join-Path $latestVersionDir.FullName 'x64'
      Write-Output "SDK tools in $SDKTools"
      $env:PATH="$SDKTools;$env:PATH"
    # CMake configure and build
    - cmake -S . -B build -A $env:ARCH
    - cmake --build build --config Release
    # Normalize architecture
    - |
      if ($env:ARCH -eq "Win32") { $normarch = "x86" }
      elseif ($env:ARCH -eq "ARM64") { $normarch = "arm64" }
      else { $normarch = $env:ARCH }
      mkdir -Force artifacts
      mkdir -Force artifacts/x64
      mkdir -Force artifacts/x86
      cp build/bin/Release/diff-ext-setup.exe "artifacts/$normarch/diff-ext-setup.exe"
      cp build/bin/Release/diff-ext-classic.dll "artifacts/$normarch/diff-ext-classic.dll"
      if (Test-Path build/msix/*.msix) { cp build/msix/*.msix "artifacts/$normarch/diff-ext.msix" }
    # Save for downstream
    - echo "Build for $normarch completed."

  artifacts:
    paths:
      - artifacts/*
    expire_in: 1 day

# 2. PACKAGE THE INSTALLER
package:
  stage: package

  tags:
    - saas-windows-medium-amd64

  dependencies:
    - build

  script: |
    choco install innosetup --no-progress --yes
    # Move built files from artifacts to installer structure
    mv artifacts/x64 installer/
    mv artifacts/x86 installer/
    & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" "installer\diff-ext.iss"

  artifacts:
    paths:
      - installer/diff-ext-installer.exe
    expire_in: 1 day

# 3. UPLOAD TO PACKAGE REPOSITORY
upload:
  stage: upload
  image: curlimages/curl:latest
  needs:
    - package
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Uploading installer to GitLab Package Registry..."
    - >
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" \
           --upload-file installer/diff-ext-installer.exe \
           "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/diff-ext/${CI_COMMIT_TAG}/diff-ext-installer.exe"

# 4. CREATE RELEASE (ON TAG)
release:
  stage: release
  
  image: registry.gitlab.com/gitlab-org/release-cli:latest

  # tags:
  #   - saas-windows-medium-amd64

  dependencies:
    - package

  rules:
    - if: $CI_COMMIT_TAG

  script:
    - echo "Releasing $CI_COMMIT_TAG"

  release:
    name: "$CI_COMMIT_TAG"
    tag_name: "$CI_COMMIT_TAG"
    description: "Automated release for $CI_COMMIT_TAG"
    assets:
      links:
        - name: "diff-ext-installer.exe"
          # url: "$CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/raw/installer/diff-ext-installer.exe"
          url: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/diff-ext/${CI_COMMIT_TAG}/diff-ext-installer.exe"
